# algorithm 2d
# 1: MeshAdapt, 2: Automatic, 3: Initial mesh only, 5: Delaunay, 6: Frontal-Delaunay (default),
# 7: BAMG, 8: Frontal-Delaunay for Quads, 9: Packing of Parallelograms
# algorithm 3d
# 1: Delaunay (default), 3: Initial mesh only, 4: Frontal, 7: MMG3D, 9: R-tree, 10: HXT
data: 
  class: A
  tag: input 
  sub_actions:
    - class: A 
      tag: algorithm
      sub_actions:
        - {class: FT, tag: 2d, choices: [1, 2, 3, 5, 6, 7, 8, 9]}
        - {class: FT, tag: 3d, choices: [1, 3, 4, 7, 9, 10]}
    - class: A
      tag: size
      sub_actions:
        - {class: FC, tag: factor, low: 0.7, high: 1.3}
        - {class: FC, tag: min, low: 0.1, high: 1}
        - {class: FC, tag: max, low: 1, high: 10}
        - {class: FC, tag: curvature, low: 20, high: 100}
        - {class: FD, tag: boundary, low: 1, high: 2}
        - {class: FC, tag: cast_iron, low: 0.01, high: 0.5}
        - {class: FC, tag: filling, low: 0.01, high: 0.5 }
    - class: GJ
      tag: container
      input_path: gmsh/container.json
      template:
        metadata:
          run:
            options:
              Mesh.Algorithm: $.~~.algorithm.2d$
              Mesh.Algorithm3D: $.~~.algorithm.3d$
              Mesh.MeshSizeFactor: $.~~.size.factor$
              Mesh.MeshSizeMin: $.~~.size.min$
              Mesh.MeshSizeMax: $.~~.size.max$
              Mesh.MeshSizeFromCurvature: $.~~.size.curvature$
              Mesh.MeshSizeExtendFromBoundary: $.~~.size.boundary$
    - class: GJ
      tag: cast_iron
      input_path: gmsh/cast_iron.json
      template: {data: {layer: [[1.450;$.~~.size.cast_iron$], [5.500;$.~~.size.cast_iron$]]}}
    - class: GJ
      tag: filling
      input_path: gmsh/filling.json
      template: {data: {layer: [[1.215;$.~~.size.filling$], [5.030;$.~~.size.filling$]]}}